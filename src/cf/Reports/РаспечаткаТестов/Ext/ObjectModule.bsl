
// формируем отчет
Функция СформироватьОтчет(ОбъектТестирования, Разделы, НачалоПериода, КонецПериода, ВыводПравильныхОтветов) Экспорт
		
	СписокНужныхРазделов = Новый СписокЗначений;
	Для Каждого Раздел Из Разделы Цикл
		Если Раздел.Пометка Тогда
			СписокНужныхРазделов.Добавить(Раздел.Значение);
		КонецЕсли;
	КонецЦикла;
	
	УчитыватьРазделы = ?(СписокНужныхРазделов.Количество() = 0, Ложь, Истина);
	Если УчитыватьРазделы Тогда
		МассивРазделов = СписокНужныхРазделов.ВыгрузитьЗначения();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
	               |	Вопросы.Код КАК Код,
	               |	Вопросы.Вопрос,
	               |	Вопросы.Ответ1,
	               |	Вопросы.Ответ2,
	               |	Вопросы.Ответ3,
	               |	Вопросы.Ответ4,
	               |	Вопросы.Ответ5,
	               |	Вопросы.Ответ6,
	               |	Вопросы.ПравильныйВариантОтвета,
	               |	Вопросы.ДатаТеста КАК ДатаТеста,
	               |	Вопросы.Картинка,
	               |	Вопросы.Раздел,
	               |	Вопросы.НомерВопросаВКомплекте,
	               |	Вопросы.Ссылка,
	               |	Вопросы.Комментарий
	               |ИЗ
	               |	Справочник.Вопросы КАК Вопросы
	               |ГДЕ
	               |	Вопросы.Владелец = &ОбъектТеста";
	
	Если УчитыватьРазделы Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И Вопросы.Раздел В(&МассивРазделов)";
		Запрос.УстановитьПараметр("МассивРазделов", МассивРазделов);
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|УПОРЯДОЧИТЬ ПО";
		
	Если УчитыватьРазделы Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	Вопросы.Раздел.Код,
		|	Вопросы.НомерВопросаВКомплекте";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|   ДатаТеста";
	КонецЕсли;
	
	//Запрос.УстановитьПараметр("ДатаНач",	НачалоПериода);	
	//Запрос.УстановитьПараметр("ДатаКон",	КонецПериода);
	Запрос.УстановитьПараметр("ОбъектТеста",ОбъектТестирования);
    Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Сообщить("Нет данных для отчета...", СтатусСообщения.Обычное); 
		Возврат Неопределено;
	КонецЕсли; 
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Тесты";
	ШрифтЖирный = Новый Шрифт(,9,Истина);
	ЦветЗеленый 	= Новый Цвет(233,255,236);
	
	// Вывод заголовка
	Макет = ПолучитьМакет("Тесты");
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.Период = ПредставлениеПериода(НачалоДня(НачалоПериода), КонецМесяца(КонецДня(КонецПериода)), "ФП = Истина");
	Область.Параметры.ОбъектТестирования = ОбъектТестирования.Наименование;
	ТабДокумент.Вывести(Область);
	
	ОбластьВ = Макет.ПолучитьОбласть("Вопрос");
	ОбластьО = Макет.ПолучитьОбласть("Ответ");
	ОбластьП = Макет.ПолучитьОбласть("ПравильныйОтвет");
	ОбластьК = Макет.ПолучитьОбласть("Рисунок");
	ОбластьПо = Макет.ПолучитьОбласть("Подсказка");
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбластьВ.Параметры.Ссылка = Выборка.Ссылка;
		ОбластьВ.Параметры.Вопрос = Выборка.Вопрос;
		ЗаголовокВопроса = ?(УчитыватьРазделы,
		                     "Раздел: """ + Выборка.Раздел + """,    вопрос №" + Выборка.НомерВопросаВКомплекте,
							 "Вопрос код № " + Выборка.Код);
		ОбластьВ.Параметры.ЗаголовокВопроса = ЗаголовокВопроса;
		
		ТабДокумент.Вывести(ОбластьВ);
		
		Для Ном = 1 По 6 Цикл	
			ЗначениеОтвета = СокрЛП(Выборка["Ответ" + Ном]);
			
			// выводим только заполненные ответы
			Если ЗначениеЗаполнено(ЗначениеОтвета) Тогда
				ОбластьО.Параметры.Ответ = ЗначениеОтвета;
				
				Если ВыводПравильныхОтветов = 1 Тогда			// без выделения правлиных ответов
					ТабДокумент.Вывести(ОбластьО);
					
				ИначеЕсли ВыводПравильныхОтветов = 2 Тогда		// выделяем правильные ответы
					Если Ном = Выборка.ПравильныйВариантОтвета Тогда
						ОбластьП.Параметры.Ответ = ЗначениеОтвета;
						ТабДокумент.Вывести(ОбластьП);
					Иначе
						ТабДокумент.Вывести(ОбластьО);
					КонецЕсли;
					
				ИначеЕсли ВыводПравильныхОтветов = 3 Тогда		// только правильные ответы
					Если Ном = Выборка.ПравильныйВариантОтвета Тогда
						ТабДокумент.Вывести(ОбластьО);
					КонецЕсли; 
				КонецЕсли;
			КонецЕсли;
		КонецЦикла; 
		
		Картинка = Выборка.Картинка.Получить();
		Если ЗначениеЗаполнено(Картинка) Тогда
			ТестовыеКартинки = ТабДокумент.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
			Индекс = ТабДокумент.Рисунки.Индекс(ТестовыеКартинки);
			
			ТабДокумент.Вывести(ОбластьК);						
			Если ТипЗнч(Картинка) <> Тип("Картинка") Тогда
					ИмяФайла = КаталогВременныхФайлов() + ОбъектТестирования.Наименование + "_" + СокрЛП(Индекс); 
					Картинка.Записать(ИмяФайла); 
					Картинка = Новый Картинка(ИмяФайла);
			КонецЕсли;
			ТабДокумент.Рисунки[Индекс].Картинка = Картинка;
			ТабДокумент.Рисунки[Индекс].РазмерКартинки = РазмерКартинки.Пропорционально;
			ТабДокумент.Рисунки[Индекс].Расположить(ТабДокумент.Область("Картинка"));
		КонецЕсли; 
		Если ЗначениеЗаполнено(Выборка.Комментарий) Тогда
			ОбластьПо.Параметры.Подсказка = "Подсказка:" + Символы.ВК + Выборка.Комментарий;
			ТабДокумент.Вывести(ОбластьПо);
		КонецЕсли; 
	КонецЦикла;
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 10;
	ТабДокумент.ПолеСлева               = 10;
	ТабДокумент.ПолеСнизу               = 10;
	ТабДокумент.ПолеСправа              = 10;
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Портрет;
	ТабДокумент.ОтображатьСетку = Ложь;
	ТабДокумент.ОтображатьЗаголовки = Ложь;
	ТабДокумент.ТолькоПросмотр = Истина;
	ТабДокумент.Защита = Истина;
	
	Возврат ТабДокумент;
	
КонецФункции  // СформироватьОтчет()

