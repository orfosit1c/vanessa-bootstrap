&НаКлиенте
Перем мОбъектТестирования;
&НаКлиенте
Перем мДатаТеста;
&НаКлиенте
Перем мВопрос;
&НаКлиенте
Перем мОтвет1;
&НаКлиенте
Перем мОтвет2;
&НаКлиенте
Перем мОтвет3;
&НаКлиенте
Перем мОтвет4;
&НаКлиенте
Перем мОтвет5;
&НаКлиенте
Перем мОтвет6;
&НаКлиенте
Перем мПодсказка;
&НаКлиенте
Перем мПравильныйВариантОтвета;
&НаКлиенте
Перем мКод;
&НаКлиенте
Перем мКартинка;
&НаКлиенте
Перем мРаздел;
&НаКлиенте
Перем мНомерВопроса;
&НаКлиенте
Перем мНомерОтвета;
&НаКлиенте
Перем мНомерПравильногоОтвета;
&НаКлиенте
Перем мСсылка;
&НаКлиенте
Перем мКомментарий;
&НаКлиенте
Перем НомерТекущегоВопроса;
&НаКлиенте
Перем мСложный;


&НаСервере
Функция СформироватьТЗНаСервере(ОбъектТестирования, ДатаНач, ДатаКон, Разделы, ЧислоВопросов, ПоследовательноПоРазделам, ПоследовательноПоВопросам)
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
	               |    Вопросы.Ссылка КАК Ссылка,
				   |	Вопросы.Владелец КАК ОбъектТестирования,
				   |	Вопросы.ДатаТеста КАК ДатаТеста,
				   |	Вопросы.Вопрос КАК Вопрос,
				   |	Вопросы.Ответ1,
				   |	Вопросы.Ответ2,
				   |	Вопросы.Ответ3,
				   |	Вопросы.Ответ4,
				   |	Вопросы.Ответ5,
				   |	Вопросы.Ответ6,
				   |	Вопросы.ПравильныйВариантОтвета,
				   |	Вопросы.Код,
				   |	Вопросы.Картинка,
				   |	Вопросы.Раздел,
				   |	Вопросы.Комментарий,
				   |    Вопросы.Сложный
				   |ИЗ
				   |	Справочник.Вопросы КАК Вопросы
				   |ГДЕ
				   |	Вопросы.Владелец = &ОбъектТестирования
				   //|	И Вопросы.ДатаТеста МЕЖДУ &ДатаНач И &ДатаКон
				   |	И Вопросы.ПометкаУдаления = ЛОЖЬ";
				   
	Запрос.УстановитьПараметр("ОбъектТестирования", ОбъектТестирования);
	//Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	//Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	
	Если Не Разделы.Количество() = 0 Тогда
		Разделы = Разделы;
		Массив = Разделы.ВыгрузитьЗначения();
		Запрос.УстановитьПараметр("Массив", Массив);
		ТекстЗапроса = ТекстЗапроса + " И Вопросы.Раздел В(&Массив)";
	КонецЕсли;
	
	Если ТолькоСложные Тогда
		ТекстЗапроса = ТекстЗапроса + " И Вопросы.Сложный";	
	КонецЕсли;
	
	Если ПоследовательноПоВопросам Тогда
		 ТекстЗапроса = ТекстЗапроса + "
		 |Упорядочить ПО
		 |Вопросы.Владелец,
		 |Вопросы.Раздел,
		 |Вопросы.НомерВопросаВКомплекте";
    КонецЕсли;
		
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	ТЗ = РезультатЗапроса.Выгрузить();
	Если ТЗ.Количество() = 0 Тогда
		//Сообщить("Отсутствуют вопросы для тестирования! (Объект тестирования - " + 
		//		  ОбъектТестирования + ", период - с " + 
		//		  ДатаНач + " по " + 
		//		  ДатаКон + ")");	  
		Отказ = Истина;
		Возврат Неопределено;
	КонецЕсли;
	Если ЧислоВопросов > ТЗ.Количество() Тогда
		ЧислоВопросовВТесте = ТЗ.Количество();
	Иначе
		ЧислоВопросовВТесте = ЧислоВопросов;
	КонецЕсли;
	
	Если ПоследовательноПоВопросам Тогда
		
		СписокСлЧисел 	= Новый СписокЗначений;
		Для я = 1 По ЧислоВопросовВТесте Цикл
			СписокСлЧисел.Добавить(я-1);
		КонецЦикла;
		
	Иначе
		
		
		ГенСлЧисел 		= Новый ГенераторСлучайныхЧисел;
		СписокСлЧисел 	= Новый СписокЗначений;
		ИндексРаздела 	= 0;
		
		Для я = 1 По ЧислоВопросовВТесте Цикл
			
			Если ПоследовательноПоРазделам Тогда
				
				Пока 1 = 1 Цикл
					СледСлЧисло = ГенСлЧисел.СлучайноеЧисло(0, ТЗ.Количество() - 1);
					Если СписокСлЧисел.НайтиПоЗначению(СледСлЧисло) = Неопределено И ТЗ.Получить(СледСлЧисло).Раздел = Разделы[ИндексРаздела].Значение Тогда
						СписокСлЧисел.Добавить(СледСлЧисло);
						ИндексРаздела = ?(ИндексРаздела = Разделы.Количество()-1, 0, ИндексРаздела + 1);
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
			Иначе
				
				Пока 1 = 1 Цикл
					СледСлЧисло = ГенСлЧисел.СлучайноеЧисло(0, ТЗ.Количество() - 1);
					Если СписокСлЧисел.НайтиПоЗначению(СледСлЧисло) = Неопределено Тогда
						СписокСлЧисел.Добавить(СледСлЧисло);
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
			ааа = 0;
		КонецЦикла;
		
	КонецЕсли;

	//Для ю = 0 По СписокСлЧисел.Количество() - 1 Цикл
	//	//Сообщить(СписокСлЧисел.Получить(ю).Значение);
	//КонецЦикла;
	
	ИтоговаяТЗ = Новый ТаблицаЗначений;
	ИтоговаяТЗ.Колонки.Добавить("ОбъектТестирования");
	ИтоговаяТЗ.Колонки.Добавить("ДатаТеста");
	ИтоговаяТЗ.Колонки.Добавить("Вопрос");
	ИтоговаяТЗ.Колонки.Добавить("Ответ1");
	ИтоговаяТЗ.Колонки.Добавить("Ответ2");
	ИтоговаяТЗ.Колонки.Добавить("Ответ3");
	ИтоговаяТЗ.Колонки.Добавить("Ответ4");
	ИтоговаяТЗ.Колонки.Добавить("Ответ5");
	ИтоговаяТЗ.Колонки.Добавить("Ответ6");
	ИтоговаяТЗ.Колонки.Добавить("ПравильныйВариантОтвета");
	ИтоговаяТЗ.Колонки.Добавить("Код");
	ИтоговаяТЗ.Колонки.Добавить("Картинка");
	ИтоговаяТЗ.Колонки.Добавить("Раздел");
	ИтоговаяТЗ.Колонки.Добавить("Ссылка");
	ИтоговаяТЗ.Колонки.Добавить("Комментарий");
	ИтоговаяТЗ.Колонки.Добавить("Сложный");
	
	Для э = 0 По СписокСлЧисел.Количество() - 1 Цикл
		ТекСлЧисло = СписокСлЧисел.Получить(э).Значение;
		НовСтрока = ИтоговаяТЗ.Добавить();
		НовИтСтрока = ТЗ.Получить(ТекСлЧисло);
		НовСтрока.ОбъектТестирования = НовИтСтрока.ОбъектТестирования;
		НовСтрока.ДатаТеста = НовИтСтрока.ДатаТеста;
		НовСтрока.Вопрос = НовИтСтрока.Вопрос;
		НовСтрока.Ответ1 = НовИтСтрока.Ответ1;
		НовСтрока.Ответ2 = НовИтСтрока.Ответ2;
		НовСтрока.Ответ3 = НовИтСтрока.Ответ3;
		НовСтрока.Ответ4 = НовИтСтрока.Ответ4;
		НовСтрока.Ответ5 = НовИтСтрока.Ответ5;
		НовСтрока.Ответ6 = НовИтСтрока.Ответ6;
		НовСтрока.ПравильныйВариантОтвета = НовИтСтрока.ПравильныйВариантОтвета;
		НовСтрока.Код = НовИтСтрока.Код;
		НовСтрока.Картинка = НовИтСтрока.Картинка;
		НовСтрока.Раздел = НовИтСтрока.Раздел;
		НовСтрока.Ссылка = НовИтСтрока.Ссылка;
		НовСтрока.Комментарий = НовИтСтрока.Комментарий;
		НовСтрока.Сложный     = НовИтСтрока.Сложный;
	КонецЦикла;
	
	МассивМассивов = Новый Массив;
	МассивМассивов.Добавить(ИтоговаяТЗ.ВыгрузитьКолонку("ОбъектТестирования"));
	МассивМассивов.Добавить(ИтоговаяТЗ.ВыгрузитьКолонку("ДатаТеста"));
	МассивМассивов.Добавить(ИтоговаяТЗ.ВыгрузитьКолонку("Вопрос"));
	МассивМассивов.Добавить(ИтоговаяТЗ.ВыгрузитьКолонку("Ответ1"));
	МассивМассивов.Добавить(ИтоговаяТЗ.ВыгрузитьКолонку("Ответ2"));
	МассивМассивов.Добавить(ИтоговаяТЗ.ВыгрузитьКолонку("Ответ3"));
	МассивМассивов.Добавить(ИтоговаяТЗ.ВыгрузитьКолонку("Ответ4"));
	МассивМассивов.Добавить(ИтоговаяТЗ.ВыгрузитьКолонку("Ответ5"));
	МассивМассивов.Добавить(ИтоговаяТЗ.ВыгрузитьКолонку("Ответ6"));
	МассивМассивов.Добавить(ИтоговаяТЗ.ВыгрузитьКолонку("ПравильныйВариантОтвета"));
	МассивМассивов.Добавить(ИтоговаяТЗ.ВыгрузитьКолонку("Код"));
	МассивМассивов.Добавить(ИтоговаяТЗ.ВыгрузитьКолонку("Картинка"));
	МассивМассивов.Добавить(ИтоговаяТЗ.ВыгрузитьКолонку("Раздел"));
	
	ТЗВопросОтвет = Новый ТаблицаЗначений;
	ТЗВопросОтвет.Колонки.Добавить("НомерВопроса");
	ТЗВопросОтвет.Колонки.Добавить("НомерОтвета");
	ТЗВопросОтвет.Колонки.Добавить("НомерПравильногоОтвета");
	Для я = 1 По ИтоговаяТЗ.Количество() Цикл
		СтрокаТЗВопрОтв = ТЗВопросОтвет.Добавить();
		СтрокаТЗВопрОтв.НомерВопроса = я;
	КонецЦикла;

	МассивМассивов.Добавить(ТЗВопросОтвет.ВыгрузитьКолонку("НомерВопроса"));
	МассивМассивов.Добавить(ТЗВопросОтвет.ВыгрузитьКолонку("НомерОтвета"));
	МассивМассивов.Добавить(ТЗВопросОтвет.ВыгрузитьКолонку("НомерПравильногоОтвета"));
	
	МассивМассивов.Добавить(ИтоговаяТЗ.ВыгрузитьКолонку("Ссылка"));
	МассивМассивов.Добавить(ИтоговаяТЗ.ВыгрузитьКолонку("Комментарий"));
	МассивМассивов.Добавить(ИтоговаяТЗ.ВыгрузитьКолонку("Сложный"));
	
	Возврат МассивМассивов;
	
КонецФункции

&НаКлиенте
Процедура СкрытьПустыеПоляОтветов()
	
	Для Сч = 1 По 6 Цикл
		ЭлементСпискаВыбора = Элементы.НомерОтвета.СписокВыбора.НайтиПоЗначению(Сч);
		Если ЭтаФорма["Ответ" + Сч] = "" Тогда
			Элементы["Ответ" + Сч].Видимость = Ложь;
			Если Не ЭлементСпискаВыбора = Неопределено Тогда
				Элементы.НомерОтвета.СписокВыбора.Удалить(ЭлементСпискаВыбора);
			КонецЕсли;	
		Иначе
			Элементы["Ответ" + Сч].Видимость = Истина;
			Если ЭлементСпискаВыбора = Неопределено Тогда
				Элементы.НомерОтвета.СписокВыбора.Добавить(Сч);
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	Элементы.НомерОтвета.СписокВыбора.СортироватьПоЗначению();
	
КонецПроцедуры	

// $
&НаКлиенте
Процедура УстановитьВидимостьПодсказки (Флаг, Индекс)
	Если ЗначениеЗаполнено(мКомментарий[Индекс]) Тогда
		Элементы.Подсказка.Видимость = Флаг;
	Иначе
		Элементы.Подсказка.Видимость = ЛОЖЬ;
	КонецЕсли; 
КонецПроцедуры
// $
&НаКлиенте

 
Процедура ПриОткрытии()
	
	МассивМассивов = СформироватьТЗНаСервере(Этаформа.ОбъектТестирования, Этаформа.ДатаНач, ЭтаФорма.ДатаКон, ЭтаФорма.Разделы, ЭтаФорма.ЧислоВопросов, ЭтаФорма.ПоследовательноПоРазделам, ЭтаФорма.ПоследовательноПоВопросам);
	Если МассивМассивов = Неопределено Тогда
		ЭтаФорма.Закрыть(0);
		Возврат;
	//Иначе
	//	ЭтаФорма.ВладелецФормы.Закрыть();
	КонецЕсли;
	
	мОбъектТестирования = МассивМассивов[0];
	мДатаТеста = МассивМассивов[1];
	мВопрос = МассивМассивов[2];
	мОтвет1 = МассивМассивов[3];
	мОтвет2 = МассивМассивов[4];
	мОтвет3 = МассивМассивов[5];
	мОтвет4 = МассивМассивов[6];
	мОтвет5 = МассивМассивов[7];
	мОтвет6 = МассивМассивов[8];
	мПравильныйВариантОтвета = МассивМассивов[9];
	мКод = МассивМассивов[10];
	мКартинка = МассивМассивов[11];
	мРаздел = МассивМассивов[12];
	
	мНомерВопроса = МассивМассивов[13];
	мНомерОтвета = МассивМассивов[14];
	мНомерПравильногоОтвета = МассивМассивов[15];
	
	мСсылка = МассивМассивов[16];
	
	мКомментарий = МассивМассивов[17];
	
	мСложный = МассивМассивов[18];
	
	ЭтаФорма.ОбъектТестирования = мОбъектТестирования[0];
	ЭтаФорма.ДатаТеста = мДатаТеста[0];
	ЭтаФорма.Вопрос = мВопрос[0];
	ЭтаФорма.Ответ1 = мОтвет1[0];
	ЭтаФорма.Ответ2 = мОтвет2[0];
	ЭтаФорма.Ответ3 = мОтвет3[0];
	ЭтаФорма.Ответ4 = мОтвет4[0];
	ЭтаФорма.Ответ5 = мОтвет5[0];
	ЭтаФорма.Ответ6 = мОтвет6[0];
	ЭтаФорма.ПравильныйВариантОтвета = мПравильныйВариантОтвета[0];
	ЭтаФорма.Код = мКод[0];
	ЭтаФорма.Раздел = мРаздел[0];
	
	ЭтаФорма.Сложный = мСложный[0];
	
	АдресКартинки = ПолучитьНавигационнуюСсылку(мСсылка[0], "Картинка");
	НомерВопроса = 1;
	ЭтаФорма.НадписьВопросТакойТо = "Вопрос " + НомерВопроса + " из " + мОбъектТестирования.Количество();
	НомерТекущегоВопроса = НомерВопроса;
	
	СкрытьПустыеПоляОтветов();
	Индекс = НомерТекущегоВопроса - 1;

	УстановитьВидимостьПодсказки (ЛОЖЬ, Индекс)
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Этаформа.ОбъектТестирования = ЭтаФорма.Параметры.ОбъектТестирования;
	Этаформа.ДатаНач = ЭтаФорма.Параметры.ДатаНач;
	Этаформа.ДатаКон = ЭтаФорма.Параметры.ДатаКон;
	Этаформа.Разделы = ЭтаФорма.Параметры.Разделы;
	Этаформа.ЧислоВопросов = ЭтаФорма.Параметры.ЧислоВопросов;
	Этаформа.ПоследовательноПоРазделам = ЭтаФорма.Параметры.ПоследовательноПоРазделам;
	Этаформа.ПоследовательноПоВопросам = ЭтаФорма.Параметры.ПоследовательноПоВопросам;
    ЭтаФорма.ТолькоСложные = ЭтаФорма.Параметры.ТолькоСложные;

КонецПроцедуры

&НаКлиенте
Процедура ЗапомнитьОтвет()
	
   Индекс = мНомерВопроса.Найти(НомерТекущегоВопроса);
   мНомерОтвета[Индекс] = НомерОтвета;
   мНомерПравильногоОтвета[Индекс] = ПравильныйВариантОтвета;
   
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЛист(НомерТекущегоВопроса);
	
	Индекс = НомерТекущегоВопроса - 1;
	ДатаТеста = мДатаТеста[Индекс];
	Вопрос = мВопрос[Индекс];
	Ответ1 = мОтвет1[Индекс];
	Ответ2 = мОтвет2[Индекс];
	Ответ3 = мОтвет3[Индекс];
	Ответ4 = мОтвет4[Индекс];
	Ответ5 = мОтвет5[Индекс];
	Ответ6 = мОтвет6[Индекс];
	ПравильныйВариантОтвета = мПравильныйВариантОтвета[Индекс];
	Код = мКод[Индекс];
	Раздел = мРаздел[Индекс];
	АдресКартинки = ПолучитьНавигационнуюСсылку(мСсылка[Индекс], "Картинка");
	
	Сложный = мСложный[Индекс];

	ИндексВопроса = мНомерВопроса.Найти(НомерТекущегоВопроса);
	НомерОтвета = мНомерОтвета[ИндексВопроса];
	НадписьВопросТакойТо = "Вопрос " + НомерТекущегоВопроса + " из " + мОбъектТестирования.Количество();
	
	СкрытьПустыеПоляОтветов();
	
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаПредыдущий100Нажатие(Команда)
	
	ЗапомнитьОтвет();
	Если НомерТекущегоВопроса = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Если НомерТекущегоВопроса <= 100 Тогда
		Возврат;
	КонецЕсли;
	
	НомерТекущегоВопроса = НомерТекущегоВопроса - 100;
	ЗаполнитьЛист(НомерТекущегоВопроса);
	УстановитьВидимостьПодсказки (ЛОЖЬ, НомерТекущегоВопроса -1)
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаПредыдущий10Нажатие(Команда)
	
	ЗапомнитьОтвет();
	Если НомерТекущегоВопроса = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Если НомерТекущегоВопроса <= 10 Тогда
		Возврат;
	КонецЕсли;
	
	НомерТекущегоВопроса = НомерТекущегоВопроса - 10;
	ЗаполнитьЛист(НомерТекущегоВопроса);
	УстановитьВидимостьПодсказки (ЛОЖЬ, НомерТекущегоВопроса -1)
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаПредыдущийНажатие(Команда)
	
	ЗапомнитьОтвет();
	Если НомерТекущегоВопроса = 1 Тогда
		Возврат;
	КонецЕсли;
	
	НомерТекущегоВопроса = НомерТекущегоВопроса - 1;
	ЗаполнитьЛист(НомерТекущегоВопроса);
	
	//СкрытьПустыеПоляОтветов();
	УстановитьВидимостьПодсказки (ЛОЖЬ, НомерТекущегоВопроса -1)

КонецПроцедуры

&НаКлиенте
Процедура КнопкаСледующийНажатие(Элемент)
	
	ЗапомнитьОтвет();
	Если НомерТекущегоВопроса = мОбъектТестирования.Количество() Тогда
		Возврат;
	КонецЕсли;
	
    НомерТекущегоВопроса = НомерТекущегоВопроса + 1;	
	ЗаполнитьЛист(НомерТекущегоВопроса);
	
	//СкрытьПустыеПоляОтветов();
	УстановитьВидимостьПодсказки (ЛОЖЬ, НомерТекущегоВопроса -1)
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаСледующий10Нажатие(Команда)
	
	ЗапомнитьОтвет();
	Если НомерТекущегоВопроса = мОбъектТестирования.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	Если НомерТекущегоВопроса + 10 > мОбъектТестирования.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	НомерТекущегоВопроса = НомерТекущегоВопроса + 10;
	ЗаполнитьЛист(НомерТекущегоВопроса);
	УстановитьВидимостьПодсказки (ЛОЖЬ, НомерТекущегоВопроса -1)

КонецПроцедуры

&НаКлиенте
Процедура КнопкаСледующий100Нажатие(Команда)
	
	ЗапомнитьОтвет();
	Если НомерТекущегоВопроса = мОбъектТестирования.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	Если НомерТекущегоВопроса + 100 > мОбъектТестирования.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	НомерТекущегоВопроса = НомерТекущегоВопроса + 100;
	ЗаполнитьЛист(НомерТекущегоВопроса);
	УстановитьВидимостьПодсказки (ЛОЖЬ, НомерТекущегоВопроса -1)
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаПроверитьНажатие(Элемент)
	
	Если НомерОтвета = ПравильныйВариантОтвета Тогда
		Предупреждение("Ответ верный!",5);
	Иначе
		Предупреждение("Ответ неверный!!!",5);
	КонецЕсли;
	Индекс = НомерТекущегоВопроса - 1;
	ЭтаФорма.Подсказка = мКомментарий[Индекс];
	УстановитьВидимостьПодсказки (ИСТИНА, Индекс)
КонецПроцедуры

Процедура ПолучитьВывестиШапку(ТабДок)
	
    Шапка = Обработки.Тестирование1СПрофессионал.ПолучитьМакет("Макет").ПолучитьОбласть("Шапка");
	ТабДок.Вывести(Шапка);
	
КонецПроцедуры

Функция ПолучитьСтроку()
	
    Возврат Обработки.Тестирование1СПрофессионал.ПолучитьМакет("Макет").ПолучитьОбласть("Строка");
	
КонецФункции

Процедура ВывестиСтроку(ТабДок, Строка, a, b, c)
	
	Строка.Параметры.Установить(0, a);
	Строка.Параметры.Установить(1, b);
	Строка.Параметры.Установить(2, c);
	Если c = b Тогда
		Строка.Параметры.Установить(3, "+");
	Иначе
		Строка.Параметры.Установить(3, "-");
	КонецЕсли;
	ТабДок.Вывести(Строка);
	
КонецПроцедуры	

Процедура ПолучитьВывестиПодвал(ТабДок, ЧислоОтветов, ЧислоПравильныхОтветов)
	
    Подвал = Обработки.Тестирование1СПрофессионал.ПолучитьМакет("Макет").ПолучитьОбласть("Подвал");
	
	Подвал.Параметры.Установить(0, ЧислоОтветов);
	Подвал.Параметры.Установить(1, ЧислоПравильныхОтветов);
	ТабДок.Вывести(Подвал);
		
КонецПроцедуры

&НаКлиенте
Функция СформироватьОтчет()
	
	ЗапомнитьОтвет();
	ТабДок = Новый ТабличныйДокумент;
    ПолучитьВывестиШапку(ТабДок);
	
	Строка = ПолучитьСтроку();
	ЧислоПравильныхОтветов = 0;
	ЧислоОтветов = 0;
	
	Для я = 0 По мНомерВопроса.Количество() - 1 Цикл
		Индекс = я;
		Если мНомерОтвета[Индекс] <> 1 и мНомерОтвета[Индекс] <> 2 и мНомерОтвета[Индекс] <> 3
			и мНомерОтвета[Индекс] <> 4 и мНомерОтвета[Индекс] <> 5 и мНомерОтвета[Индекс] <> 6 Тогда
			Продолжить;
		КонецЕсли;
		ЧислоОтветов = ЧислоОтветов + 1;
		Если мНомерОтвета[Индекс] = мНомерПравильногоОтвета[Индекс] Тогда
			ЧислоПравильныхОтветов = ЧислоПравильныхОтветов + 1;
		КонецЕсли;
		
		ВывестиСтроку(ТабДок, Строка, мНомерВопроса[Индекс], мНомерПравильногоОтвета[Индекс], мНомерОтвета[Индекс]); 
		
	КонецЦикла;
	
	ПолучитьВывестиПодвал(ТабДок, ЧислоОтветов, ЧислоПравильныхОтветов);
	
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Возврат ТабДок;
	
КонецФункции

&НаСервере
Функция СформироватьРезультатТестирования(ОбъектТестирования, мВопрос, мОтвет1, мОтвет2, мОтвет3, мОтвет4, мОтвет5, мОтвет6,
	                                      мПравильныйВариантОтвета, мКартинка, мРаздел, мНомерВопроса, мНомерОтвета, мСсылка)
	
	Возврат Обработки.Тестирование1СПрофессионал.Создать().СформироватьРезультатТестированияНаСервере(ОбъектТестирования, мВопрос, мОтвет1, мОтвет2, мОтвет3, мОтвет4, мОтвет5, мОтвет6,
	                                      мПравильныйВариантОтвета, мКартинка, мРаздел, мНомерВопроса, мНомерОтвета, мСсылка);
	
КонецФункции	

&НаКлиенте
Процедура КнопкаЗакончитьНажатие(Команда)
	
	//СформироватьОтчет().Показать();
	ЗапомнитьОтвет();
	ТабДок = СформироватьРезультатТестирования(ОбъектТестирования, мВопрос, мОтвет1, мОтвет2, мОтвет3, мОтвет4, мОтвет5, мОтвет6,
	                                      мПравильныйВариантОтвета, мКартинка, мРаздел, мНомерВопроса, мНомерОтвета, мСсылка);
										  
	ТабДок.ТолькоПросмотр = Истина; 									  
    ТабДок.Показать();									  
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВопрос(Команда)
	
	Индекс = НомерТекущегоВопроса - 1;
	ОткрытьЗначение(мСсылка[Индекс]);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКомментарий(Команда)
	
	Индекс = НомерТекущегоВопроса - 1;
	Структура = Новый Структура;
	Структура.Вставить("Комментарий", мКомментарий[Индекс]);
	Структура.Вставить("ТекущийВопрос", мСсылка[Индекс]);
	ЭтаФорма.Подсказка = мКомментарий[Индекс];
	ОткрытьФормуМодально("Справочник.Вопросы.Форма.ФормаКомментарий", Структура); 
КонецПроцедуры

&НаКлиенте
Процедура СложныйПриИзменении(Элемент)
	
	Индекс = НомерТекущегоВопроса - 1;
	
	мСложный[Индекс] = Сложный;
	
	Структура = Новый Структура;
	Структура.Вставить("ТекущийВопрос", мСсылка[Индекс]);
	Структура.Вставить("Сложный", мСложный[Индекс]); 

	УстановитьСложность(Структура);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСложность(Структура)
	
	Если Структура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийВопросСсылка 	= Структура.ТекущийВопрос;
	Сложный                 = Структура.Сложный;
	
	Если ТекущийВопросСсылка.Сложный <> Сложный Тогда
		ТекущийВопрос 			= ТекущийВопросСсылка.ПолучитьОбъект();
	    ТекущийВопрос.Сложный  	= Сложный;
		ТекущийВопрос.Записать();
	КонецЕсли;
		
КонецПроцедуры










